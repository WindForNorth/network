# http/3

## 1.http/2中的不足

### 1.1.对头阻塞

HTTP/2 多个请求是跑在⼀个 TCP 连接中的，那么当 TCP 丢包时，整个 TCP 都要等待重传，那么就会阻塞该 TCP 连接中的所有请求。TCP要保证收到的数据字节流必须是完整且有序的，那么在传输过程中序号较低的包丢失了，即使序号更高的包已经到达，那么上层协议也不会提取之后的包，直到丢失的包被传回

### 1.2.TCP与TLS的握手延迟

TCP的三次握手和TLS的四次握手，共需3个往返时延（RTT）

### 1.3.网络迁移需要重新连接

网路切换时，比如从流量切换到wifi

## 2.QUIC的特点

QUIC是基于UDP运输层协议在应用层实现的可靠传输的协议，它继承了http/2的多路复用stream传输特性

### 2.1.无对头堵塞

每个包都有自己的序列号，每个连接都可以有多个stream，当某个stream中的数据包丢失时，该stream会被堵塞直至丢失的包被传回，但是其他stream流只要数据完整接收，就依然可以继续读取数据，与2.0直接堵塞整个连接相比性能提高不少

### 2.2.连接建立更快

QUIC内部包含了TLS，不同于之前版本两者之间是分层的。仅需一个RTT确认连接ID和秘钥协商

### 2.3.连接迁移

3.0以前版本，当网络切换时，重新建立链接就会导致瞬间的卡顿，3.0版本可以使用连接ID和TLS秘钥等信息无缝连接，没有卡顿

## 3.http/3

帧结构变得简单了，2.0需要自己定义stream，但是QUIC自带流结构，因此3.0的帧头会更加简单，只包含帧类型、数据长度。

另外就是头部动态表的问题，2.0版本需要接收到首次请求后才能更新动态表，但是如果第一次请求丢包，而后面紧接着发送方都使用数字代替头部信息，此时接收方的动态信息因为丢包并没有建立，那么就会出现无法识别的问题，但是3.0不一样：

其使用两个单向流确认更新动态表之后才开始使用双向流发送数据。具体过程：客户端向服务器使用其到服务器的单向流将不属于静态表中的头部信息编码发送给服务器，服务器收到后使用其到客户端的单向流向客户端发送解码流